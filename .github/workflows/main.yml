name: CI/CD Pipeline
on: 
  push:
    branches:
      - main
env:
    PYTHON_VERSION: '3.8'
    SERVER_HOST: ${{ secrets.SERVER_HOST }}
    SERVER_USER: ${{ secrets.SERVER_USER }}
    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    PROJECT_NAME: 'otus-cicd-project'

jobs:
    lint:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            python-version: ${{ env.PYTHON_VERSION }}
        - name: Install dependencies    
          run: |
            export PYTHONPATH=$(pwd)
            python3 -m pip install --upgrade pip
            pip install -r requirements/requirements.txt
            pip install -r requirements/requirements-lint.txt
        - name: Run tests
          run: black --check src
        - name: Run isort
          run: isort --check src 
        - name: Run pylint
          run: pylint src    
    test:
      needs: lint  
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            python-version: ${{ env.PYTHON_VERSION }}
        - name: Install dependencies    
          run: |
            export PYTHONPATH=$(pwd)
            python3 -m pip install --upgrade pip
            pip install -r requirements/requirements.txt
            pip install -r requirements/requirements-test.txt
        - name: Run tests
          run: pytest --cov=src tests  

    build:
      needs: test  
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Copy to server
          uses: appleboy/scp-action@master
          with:
            host: ${{ env.SERVER_HOST }}
            username: ${{ env.SERVER_USER }}
            key: ${{ env.SSH_PRIVATE_KEY }}
            source: "config,data,models,requirements,src"
            target: ${{ env.PROJECT_NAME }}
        - name: Build prod venv
          uses: appleboy/ssh-action@master
          with:
            host: ${{ env.SERVER_HOST }}
            username: ${{ env.SERVER_USER }}
            key: ${{ env.SSH_PRIVATE_KEY }}
            script: |
              cd ${{ env.PROJECT_NAME }}
              ls -la
              
              if [ ! -d ".venv" ]; then
                python3 -m venv .venv
              fi

              source .venv/bin/activate
              pip install --upgrade pip
              pip install -r requirements/requirements.txt 

    deploy:
      needs: build  
      runs-on: ubuntu-latest
      steps:
        - name: Deploy
          uses: appleboy/ssh-action@master
          with:
            host: ${{ env.SERVER_HOST }}
            username: ${{ env.SERVER_USER }}
            key: ${{ env.SSH_PRIVATE_KEY }}
            script: |
              cd ${{ env.PROJECT_NAME }}
              export PYTHONPATH=$(pwd)
              source .venv/bin/activate
              export STREAMLIT_PID=$(lsof -ti:8501) || true
              kill -9 $STREAMLIT_PID || true

              python3 src/train.py
              nohup streamlit run --server.port 8501 src/app.py > streamlit.log 2>&1 &
    